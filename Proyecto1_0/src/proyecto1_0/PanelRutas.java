/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1_0;

import Atxy2k.CustomTextField.RestrictedTextField;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matgr
 */
public class PanelRutas extends javax.swing.JPanel {

    /**
     * Creates new form PanelRutas
     */
    public PanelRutas() {
        initComponents();
        txtId.setVisible(false);
        txtId1.setVisible(false);
        RestrictedTextField r = new RestrictedTextField(txtcodigo);
        r.setLimit(4);
        RestrictedTextField r1 = new RestrictedTextField(txtClave2);
        r1.setLimit(4);
        RestrictedTextField r2 = new RestrictedTextField(txthora);
        r2.setLimit(5);
        try {

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            java.sql.Connection con = conn.getConexion();

            String sql = "SELECT  Disco FROM bus";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            while (rs.next()) {

                for (int i = 0; i < cantidadColumnas; i++) {
                    cbobus.addItem("" + rs.getObject(i + 1));
                }

            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
        tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        JPNregistrar2 = new javax.swing.JPanel();
        lblCedula2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JBTguardar2 = new javax.swing.JButton();
        lblFechaNac7 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtClave2 = new javax.swing.JTextField();
        btnBuscar2 = new javax.swing.JButton();
        Modificar2 = new javax.swing.JButton();
        lblFechaNac8 = new javax.swing.JLabel();
        txthora = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtcodigo = new javax.swing.JTextField();
        txtrutaL = new javax.swing.JTextField();
        cbobus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtrutaSa = new javax.swing.JTextField();
        txtId1 = new javax.swing.JTextField();
        lblFechaNac9 = new javax.swing.JLabel();
        txtprecio = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtruta = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("                   RUTAS");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        JPNregistrar2.setBackground(new java.awt.Color(255, 255, 255));
        JPNregistrar2.setLayout(null);

        lblCedula2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblCedula2.setText("N° disco del bus designado:");
        JPNregistrar2.add(lblCedula2);
        lblCedula2.setBounds(40, 180, 260, 25);

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel6.setText("Código:");
        JPNregistrar2.add(jLabel6);
        jLabel6.setBounds(40, 130, 80, 25);

        JBTguardar2.setText("Registrar");
        JBTguardar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTguardar2ActionPerformed(evt);
            }
        });
        JPNregistrar2.add(JBTguardar2);
        JBTguardar2.setBounds(186, 415, 85, 25);

        lblFechaNac7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac7.setText("Precio:");
        JPNregistrar2.add(lblFechaNac7);
        lblFechaNac7.setBounds(50, 300, 100, 25);

        jLabel7.setText("Ingrese el código de la ruta a modificar:");
        JPNregistrar2.add(jLabel7);
        jLabel7.setBounds(12, 56, 250, 25);

        txtClave2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClave2KeyTyped(evt);
            }
        });
        JPNregistrar2.add(txtClave2);
        txtClave2.setBounds(330, 60, 109, 22);

        btnBuscar2.setText("Buscar");
        btnBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar2ActionPerformed(evt);
            }
        });
        JPNregistrar2.add(btnBuscar2);
        btnBuscar2.setBounds(534, 56, 71, 25);

        Modificar2.setText("Modificar");
        Modificar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modificar2ActionPerformed(evt);
            }
        });
        JPNregistrar2.add(Modificar2);
        Modificar2.setBounds(332, 415, 85, 25);

        lblFechaNac8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac8.setText("Ruta (Salida-LLegada):");
        JPNregistrar2.add(lblFechaNac8);
        lblFechaNac8.setBounds(40, 240, 200, 25);

        txthora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthoraActionPerformed(evt);
            }
        });
        txthora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthoraKeyTyped(evt);
            }
        });
        JPNregistrar2.add(txthora);
        txthora.setBounds(330, 350, 60, 22);

        txtId.setBackground(java.awt.SystemColor.control);
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setCaretColor(new java.awt.Color(255, 255, 255));
        txtId.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtId.setEnabled(false);
        JPNregistrar2.add(txtId);
        txtId.setBounds(520, 170, 146, 22);

        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodigoKeyTyped(evt);
            }
        });
        JPNregistrar2.add(txtcodigo);
        txtcodigo.setBounds(330, 130, 50, 22);

        txtrutaL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrutaLActionPerformed(evt);
            }
        });
        txtrutaL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtrutaLKeyTyped(evt);
            }
        });
        JPNregistrar2.add(txtrutaL);
        txtrutaL.setBounds(550, 230, 130, 30);

        cbobus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccione" }));
        cbobus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbobusActionPerformed(evt);
            }
        });
        JPNregistrar2.add(cbobus);
        cbobus.setBounds(330, 180, 110, 22);

        jLabel1.setText("   -");
        JPNregistrar2.add(jLabel1);
        jLabel1.setBounds(490, 240, 30, 20);

        txtrutaSa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrutaSaActionPerformed(evt);
            }
        });
        txtrutaSa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtrutaSaKeyTyped(evt);
            }
        });
        JPNregistrar2.add(txtrutaSa);
        txtrutaSa.setBounds(330, 230, 130, 30);

        txtId1.setBackground(java.awt.SystemColor.control);
        txtId1.setForeground(new java.awt.Color(255, 255, 255));
        txtId1.setCaretColor(new java.awt.Color(255, 255, 255));
        txtId1.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtId1.setEnabled(false);
        JPNregistrar2.add(txtId1);
        txtId1.setBounds(520, 110, 146, 22);

        lblFechaNac9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac9.setText("Hora Salida:");
        JPNregistrar2.add(lblFechaNac9);
        lblFechaNac9.setBounds(50, 350, 100, 25);

        txtprecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprecioActionPerformed(evt);
            }
        });
        txtprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprecioKeyTyped(evt);
            }
        });
        JPNregistrar2.add(txtprecio);
        txtprecio.setBounds(330, 300, 60, 22);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPNregistrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPNregistrar2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro Rutas", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jtruta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jtruta);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tabla Rutas", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JBTguardar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTguardar2ActionPerformed
        PreparedStatement ps = null;
        int num, contador = 1;

        int an = buscar1(), an1 = buscar2();
        String comp = txtId.getText();

        //int Fila = tablausuarios.getSelectedRow();
        String comp1 = "";
        System.out.println(comp);
        if ("".equals(comp)) {
            comp = ".";
        }
        if ((comp1.equals(txthora.getText())) || (comp1.equals(txtcodigo.getText())) || (comp1.equals(txtrutaL.getText())) || (comp1.equals(txtrutaSa.getText())) || (cbobus.getSelectedIndex() == 0)) {
            JOptionPane.showMessageDialog(null, "Porfavor llene todos los campos");
        } else {
            if ((an == 1) || (an1 == 1)) {
                JOptionPane.showMessageDialog(null, "La ruta ya se encuentra registrada");
            } else {

                try {
                    Conexion objCon = new Conexion();
                    Connection conn = objCon.getConexion();
                    ps = conn.prepareStatement("INSERT INTO ruta (codigo, bus, rutas, hora,precio,Limite) VALUES (?,?,?,?,?,?)");
                    ps.setString(1, txtcodigo.getText());
                    ps.setString(2, cbobus.getSelectedItem().toString());
                    ps.setString(3,txtcodigo.getText()+"-"+ txtrutaSa.getText() + "-" + txtrutaL.getText());

                    ps.setString(4, txthora.getText());
                    ps.setString(5, txtprecio.getText());
                    ps.setString(6, txtId1.getText());

                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Ruta Registrada");

                    limpiar();
                    // tabla();

                } catch (SQLException ex) {

                    JOptionPane.showMessageDialog(null, "Error al registrar Ruta");
                    System.out.println(ex);
                }

                tabla();

            }

        }
    }//GEN-LAST:event_JBTguardar2ActionPerformed

    private void txtClave2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClave2KeyTyped


    }//GEN-LAST:event_txtClave2KeyTyped

    private void btnBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar2ActionPerformed
        // RestrictedTextField r = new RestrictedTextField(txtplaca);
        //RestrictedTextField p=new RestrictedTextField(txtClave2);

        // p.setLimit(10);
        //p.setOnlyNums(true);
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();
        String[] sep;
        String sep1;
        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM ruta WHERE codigo = ?");
            ps.setString(1, txtClave2.getText());

            rs = ps.executeQuery();

            if (rs.next()) {
                txtcodigo.setText(rs.getString("codigo"));
                sep1 = rs.getString("rutas");
                sep = sep1.split("-");
                txtrutaSa.setText(sep[1]);
                txtrutaL.setText(sep[2]);
                cbobus.setSelectedItem(rs.getString("bus"));
                txthora.setText(rs.getString("hora"));
                txtprecio.setText(rs.getString("precio"));

            } else {
                JOptionPane.showMessageDialog(null, "Ruta no encontrada");
            }

        } catch (Exception e) {
            System.err.println(e);
        }

        txtClave2.setText("");
    }//GEN-LAST:event_btnBuscar2ActionPerformed

    private void Modificar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modificar2ActionPerformed
        // Conexion conn = new Conexion();
        PreparedStatement ps = null;
        String comp1 = "";
        //int Fila = tablausuarios.getSelectedRow();
        if ((comp1.equals(txthora.getText())) || (comp1.equals(txtcodigo.getText())) || (comp1.equals(txtrutaL.getText())) || (comp1.equals(txtrutaSa.getText())) || (cbobus.getSelectedIndex() == 0)) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos");
        } else {
            try {
                Conexion objCon = new Conexion();
                com.mysql.jdbc.Connection conn = objCon.getConexion();

                ps = conn.prepareStatement("UPDATE ruta SET bus=?,rutas=?,hora=?,precio=?,Limite=? WHERE codigo=?");

                
                ps.setString(1, cbobus.getSelectedItem().toString());
                ps.setString(2, txtcodigo.getText()+"-"+txtrutaSa.getText() + "-" + txtrutaL.getText());

                ps.setString(3, txthora.getText());
               ps.setString(4, txtprecio.getText());
                ps.setString(5, txtId1.getText());
                
                ps.setString(6, txtcodigo.getText());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Ruta Modificada");

                limpiar();
                //tabla();

                //   conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Modificar ruta");
                System.err.println(ex);
            }
        }
        tabla();
    }//GEN-LAST:event_Modificar2ActionPerformed
    private boolean validaIngresos(java.awt.event.KeyEvent evt, int num) {

        char validar = evt.getKeyChar();
        if (num == 1) {
            if (Character.isDigit(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        } else {
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        }

        return false;
    }
    private void txthoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthoraActionPerformed

    private void txthoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthoraKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txthoraKeyTyped

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyTyped

    }//GEN-LAST:event_txtcodigoKeyTyped

    private void txtrutaLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrutaLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrutaLActionPerformed

    private void txtrutaLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrutaLKeyTyped
        if (validaIngresos(evt, 1)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta numeros");
        }
    }//GEN-LAST:event_txtrutaLKeyTyped

    private void txtrutaSaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrutaSaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrutaSaActionPerformed

    private void txtrutaSaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrutaSaKeyTyped
         if (validaIngresos(evt, 1)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta numeros");
        }
    }//GEN-LAST:event_txtrutaSaKeyTyped

    private void cbobusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbobusActionPerformed
        int dev = 0;
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM bus WHERE Disco = ?");
            ps.setString(1, cbobus.getSelectedItem().toString());

            rs = ps.executeQuery();

            if (rs.next()) {
                txtId1.setText(rs.getString("Capacidad"));
                //  dev = 1;

            } else {
                //JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_cbobusActionPerformed

    private void txtprecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprecioActionPerformed

    private void txtprecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprecioKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtprecioKeyTyped
    private int buscar1() {
        int dev = 0;
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM ruta WHERE codigo = ?");
            ps.setString(1, txtcodigo.getText());

            rs = ps.executeQuery();

            if (rs.next()) {

                dev = 1;

            } else {
                //JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }
        return dev;
    }

    private int buscar2() {
        int dev = 0;
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM ruta WHERE bus = ? AND  hora= ?");
            ps.setString(1, cbobus.getSelectedItem().toString());
            ps.setString(2, txthora.getText());

            rs = ps.executeQuery();

            if (rs.next()) {

                dev = 1;

            } else {
                //JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }
        return dev;
    }

    public void tabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        try {
            jtruta.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            java.sql.Connection con = conn.getConexion();

            String sql = "SELECT codigo, bus, rutas, hora,precio FROM ruta";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Código");
            modelo.addColumn("Nº disco Bus");
            modelo.addColumn("Ruta");
            modelo.addColumn("Hora de Salida");
            modelo.addColumn("Precio");

            int[] anchos = {50, 50, 100, 50, 50};
            for (int i = 0; i < jtruta.getColumnCount(); i++) {
                jtruta.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    private void limpiar() {
        txtcodigo.setText("");
        txtrutaSa.setText("");
        txtrutaL.setText("");
        txthora.setText("");
        txtprecio.setText("");
        txtId.setText("");
        cbobus.setSelectedIndex(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTguardar2;
    private javax.swing.JPanel JPNregistrar2;
    private javax.swing.JButton Modificar2;
    private javax.swing.JButton btnBuscar2;
    private javax.swing.JComboBox<String> cbobus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jtruta;
    private javax.swing.JLabel lblCedula2;
    private javax.swing.JLabel lblFechaNac7;
    private javax.swing.JLabel lblFechaNac8;
    private javax.swing.JLabel lblFechaNac9;
    private javax.swing.JTextField txtClave2;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtId1;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txthora;
    private javax.swing.JTextField txtprecio;
    private javax.swing.JTextField txtrutaL;
    private javax.swing.JTextField txtrutaSa;
    // End of variables declaration//GEN-END:variables
}
